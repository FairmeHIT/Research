%The function can be used to estimate the channel using MMSE estimator in the manuscript:

%Huafu Li, Yang Wang, Chenyang Sun, and Zhenyong Wang, "User-Centric
%Cell-Free Massive MIMO for IoT in Highly Dynamic Environments", submitted
%to IoTJ on May 29th, 2023.

%Input:
% K -> Number of UEs for the cell-free systems
% M -> Antenna number of AP
% L -> Number of APs 
% N -> Channel realization number  
% R -> Spatial correlation matrix generated by <scfGenerate.m>, [M×M×L×K] matrix 
% HMean -> Channel mean matrix generated by Eq.(1), [M×N×L×K] matrix 
% H -> Channel matrix generated by Eq.(4), [M*L×N×K] matrix 
% T -> Number of pilot 
% pIndex -> Pilot index assigned to UE, [K×1] vector
% P -> Transmit power of UE in watt, [K×1] vector
% ACF_1 -> ACF generated by <acfGenerate.m> with S=1:T, [K×L×T] vector
 
%Output:
% Hhat_MMSE -> Estimate channel matrix with MMSE estimator, [M*L×N×K] matrix  
% Ghat_MMSE -> Estimate channel matrix without channel mean, [M×M×N×K] matrix
% B_MMSE -> Estimate covariance matrix with MMSE estimator, [M×M×N×K] matrix
% C_MMSE -> Error covariance matrix with MMSE estimator, [M×M×N×K] matrix
 
function [Hhat_MMSE,Ghat_MMSE,B_MMSE,C_MMSE] = channelEstimateMMSE(K,M,L,N,R,HMean,H,T,pIndex,P,ACF_1)
 
%Store identity matrix of size [M×M]
eyeM = eye(M); 
%Generate realizations of normalized noise
Np = sqrt(0.5)*(randn(M,N,L,T) + 1i*randn(M,N,L,T)); 
%Prepare to store results
Hhat_MMSE = zeros(L*M,N,K);
Ghat_MMSE =  zeros(L*M,N,K);
B_MMSE = zeros(size(R));

%Go through all APs
for l = 1:L
    %Go through all pilots
    for t = 1:T
        %Compute processed pilot signal according to (13) with an additional scaling factor \sqrt{tau_p}
        yp_t = sqrt(P) * sum(H((l-1)*M+1:l*M,:,t==pIndex),3) + Np(:,:,l,t);
        %Compute the received pilot signal covariance matrix Psi
        Psi = (P*sum(R(:,:,l,t==pIndex),4) + eyeM);
        %Compute the received pilot signal mean
        yp_mean = sqrt(P)*sum(HMean(:,:,l,t==pIndex),4);
        %Go through all UEs that use pilot t
        for k = find(t==pIndex)' 
            %Compute the MMSE estimate
            RPsi = R(:,:,l,k) / Psi;
            Ghat_MMSE((l-1)*M+1:l*M,:,k) = sqrt(P) * ACF_1(k,l,t)' * RPsi * (yp_t - yp_mean);
            Hhat_MMSE((l-1)*M+1:l*M,:,k) = Ghat_MMSE((l-1)*M+1:l*M,:,k) + HMean(:,:,l,k);
            %Compute the estimate covariance matrix
            B_MMSE(:,:,l,k) = abs(ACF_1(k,l,t))^2*P*RPsi*R(:,:,l,k); 
        end
    end
end
%Compute the estimate error covariance matrix
C_MMSE = R - B_MMSE;
end
