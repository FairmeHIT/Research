%The function can be used to estimate the channel using LMMSE estimator in the manuscript:

%Huafu Li, Yang Wang, Chenyang Sun, and Zhenyong Wang, "User-Centric
%Cell-Free Massive MIMO for IoT in Highly Dynamic Environments", submitted
%to IoTJ on May 29th, 2023.

%Input:
% K -> Number of UEs for the cell-free systems
% M -> Antenna number of AP
% L -> Number of APs 
% N -> Channel realization number  
% Omega -> Spatial correlation matrix generated by <scfGenerate.m>, [M×M×L×K] matrix 
% H -> Channel matrix generated by Eq.(4), [M*L×N×K] matrix 
% T -> Number of pilot 
% pIndex -> Pilot index assigned to UE, [K×1] vector
% P -> Transmit power of UE in W, [K×1] vector
% ACF_2 -> ACF generated by <acfGenerate.m> with S=1:T, [K×L×T] vector
 
%Output:
% Hhat_LMMSE -> Estimate channel matrix with LMMSE estimator, [M*L×N×K] matrix  
% B_LMMSE -> Estimate covariance matrix with MMSE estimator, [M×M×N×K] matrix
% C_LMMSE -> Error covariance matrix with MMSE estimator, [M×M×N×K] matrix
% J -> Intermediate variable to calculate Eq.(51), [M×M×N×K] matrix

function [Hhat_LMMSE,B_LMMSE,C_LMMSE,J] = channelEstimateLMMSE(Omega,H,N,L,K,M,T,pIndex,P,ACF_2)
   
%Store identity matrix of size N x N
eyeM = eye(M); 
%Generate realizations of normalized noise
Np = sqrt(0.5)*(randn(M,N,L,T) + 1i*randn(M,N,L,T)); 
%Prepare to store results
Hhat_LMMSE = zeros(L*M,N,K); 
B_LMMSE = zeros(size(Omega)); 
J = zeros(size(Omega)); 

%Go through all APs
for l = 1:L 
    %Go through all pilots
    for t = 1:T 
        %Compute processed pilot signal according to (13) with an additional scaling factor \sqrt{tau_p}
        yp_t = sqrt(P) * sum(H((l-1)*M+1:l*M,:,t==pIndex),3) + Np(:,:,l,t); 
        %Compute the received pilot signal covariance matrix Psi
        Psi = (P*sum(Omega(:,:,l,t==pIndex),4) + eyeM); 
        for k = find(t==pIndex)' 
            %Compute the LMMSE estimate
            RPsi = Omega(:,:,l,k) / Psi;
            Hhat_LMMSE((l-1)*M+1:l*M,:,k) =   sqrt(P) * ACF_2(k,l,t)' * RPsi * yp_t; 
            B_LMMSE(:,:,l,k) = abs(ACF_2(k,l,t))^2*P*RPsi*Omega(:,:,l,k); 
            %Intermediate variable to calculate Eq.(51)
            J(:,:,l,k) = Psi^(-1)*Omega(:,:,l,k); 
        end 
    end 
end
%Compute the estimate error covariance matrix
C_LMMSE = Omega - B_LMMSE; 
end