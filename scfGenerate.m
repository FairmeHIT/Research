%The function can be used to generate the spatial correlation matrix  according to Lemma 2 and Lemma 4 in the manuscript:

%Huafu Li, Yang Wang, Chenyang Sun, and Zhenyong Wang, "User-Centric
%Cell-Free Massive MIMO for IoT in Highly Dynamic Environments", submitted
%to IoTJ on May 29th, 2023.

%Input:
% K -> Number of UEs for the cell-free systems
% M -> Antenna number of AP
% L -> Number of APs 
% A -> Orientation of APs, [L×1] vector
% Theta -> azimuth angle for (k,l) link, [K×L] matrix
% probLOS -> LoS probability for (k,l) link, [K×L] matrix
% rFactor -> Rician factor for (k,l) link, [K×L] matrix
% LSFC -> Large-scale fading coefficient for (k,l) link, [K×L] matrix
% kappa_R -> AoA spread control parameter for (k,l) link, [K×L] matrix
% antennaSpacing -> AP antenna spacing 

%Output:
% R -> Spatial correlation matrix generated by Lemma2, [M×M×L×K] matrix 
% Omega -> Spatial correlation matrix generated by Lemma4, [M×M×L×K] matrix 
% R_unCorr -> Spatial correlation matrix for baseline model, [M×M×L×K] matrix  
 
function [R, Omega, R_unCorr] = scfGenerate(K,M,L,Theta,A,probLOS,rFactor,LSFC,kappa_R,antennaSpacing)

%Prepare to store  
LSFC_NLOS = zeros(L,K);
LSFC_LOS = zeros(L,K);
Omega = zeros(M,M,L,K); 
R = zeros(M,M,L,K); 
R_unCorr = zeros(M,M,L,K);   
 
%Go through all APs
for l = 1:L 
    for k = 1:K  
        firstRow1 = zeros(M,1);
        firstRow2 = zeros(M,1);
        j = 1; 
        for column = 1:M
            %Distance from the first antenna
            a = 2*pi*(column - j)*antennaSpacing;
            firstRow1(column) = besseli(0,sqrt( - a^2 + kappa_R(k,l)^2 + 1i*2*a*kappa_R(k,l)*cos(A(l) - Theta(k,l)))) / besseli(0,kappa_R(k,l));
            firstRow2(column) = exp(1i*a*cos(A(l)-Theta(k,l)));  
        end 
        R_N_NLOS = toeplitz(firstRow1); 
        R_N_LOS = toeplitz(firstRow2); 
        R_N_unCorr = eye(M); 
        %Go through all UEs and apply the channel gains to the spatial correlation matrices
        if probLOS(k,l)==1 %LoS Path exists               
            LSFC_NLOS(l,k) = (1/(rFactor(k,l) +1))  * db2pow(LSFC(k,l)); 
            LSFC_LOS(l,k) = (rFactor(k,l)/(rFactor(k,l) +1)) * db2pow(LSFC(k,l));
        else  %Pure NLoS case
            LSFC_NLOS(l,k) = db2pow(LSFC(k,l)); 
            LSFC_LOS(l,k) = 0;
        end 
        %Scaling operation
        R(:,:,l,k) = LSFC_NLOS(l,k)*R_N_NLOS;
        Omega(:,:,l,k) = R(:,:,l,k) + LSFC_LOS(l,k)*R_N_LOS;  
        R_unCorr(:,:,l,k) = LSFC_NLOS(l,k)*R_N_unCorr; 
    end
end
 

 
 
